% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step-pivot.R
\name{dt_pivot_wider}
\alias{dt_pivot_wider}
\title{Pivot data from long to wide}
\usage{
dt_pivot_wider(data, id_cols = NULL, names_from = NULL,
  names_prefix = "", names_sep = "_", names_repair = "check_unique",
  values_from = NULL, values_fill = NULL, values_fn = NULL)
}
\arguments{
\item{data}{A data frame to pivot.}

\item{id_cols}{A set of columns that uniquely identifies each observation.
Defaults to all columns in \code{data} except for the columns specified in
\code{names_from} and \code{values_from}. Typically used when you have additional
variables that is directly related.}

\item{names_from, values_from}{A pair of arguments describing which column
(or columns) to get the name of the output column (\code{name_from}), and
which column (or columns) to get the cell values from (\code{values_from}).

If \code{values_from} contains multiple values, the value will be added to the
front of the output column.}

\item{names_prefix}{Not supported by data.table backed tables.}

\item{names_sep, names_pattern}{If \code{names_to} contains multiple values,
these arguments control how the column name is broken up.

\code{names_sep} takes the same specification as \code{\link[=separate]{separate()}}, and can either
be a numeric vector (specifying positions to break on), or a single string
(specifying a regular expression to split on).

\code{names_pattern} takes the same specification as \code{\link[=extract]{extract()}}, a regular
expression containing matching groups (\code{()}).

If these arguments do not give you enough control, use
\code{pivot_longer_spec()} to create a spec object and process manually as
needed.}

\item{names_repair}{What happen if the output has invalid column names?
The default, \code{"check_unique"} is to error if the columns are duplicated.
Use \code{"minimal"} to allow duplicates in the output, or \code{"unique"} to
de-duplicated by adding numeric suffixes. See \code{\link[vctrs:vec_as_names]{vctrs::vec_as_names()}}
for more options.}

\item{values_fill}{Optionally, a named list specifying what each \code{value}
should be filled in with when missing.}

\item{values_fn}{Optionally, a named list providing a function that will be
applied to the \code{value} in each cell in the output. You will typically
use this when the combination of \code{id_cols} and \code{value} column does not
uniquely identify an observation.}

\item{cols}{Columns to pivot into longer format. This takes a tidyselect
specification.}

\item{names_to}{A string specifying the name of the column to create
from the data stored in the column names of \code{data}.
Can be a character vector, creating multiple columns, if \code{names_sep}
or \code{names_pattern} is provided.}

\item{names_sep}{If \code{names_from} or \code{values_from} contains multiple
variables, this will be used to join their values together into a single
string to use as a column name.}

\item{names_prefix}{String added to the start of every variable name. This is
particularly useful if \code{names_from} is a numeric vector and you want to
create syntactic variable names.}
}
\description{
Pivot data from long to wide
}
